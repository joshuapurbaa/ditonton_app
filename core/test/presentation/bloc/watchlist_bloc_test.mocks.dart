// Mocks generated by Mockito 5.0.16 from annotations
// in core/test/presentation/bloc/watchlist_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:core/core.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies/domain/entities/movie.dart' as _i7;
import 'package:movies/domain/usecase/get_watchlist_movies.dart' as _i4;
import 'package:tv_series/tv_series.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeTvRepository_1 extends _i1.Fake implements _i3.TvRepository {}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i4.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetWatchListTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListTVs extends _i1.Mock implements _i3.GetWatchListTVs {
  MockGetWatchListTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvRepository_1()) as _i3.TvRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i3.Tv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue: Future<_i2.Either<_i6.Failure, List<_i3.Tv>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i3.Tv>>()))
          as _i5.Future<_i2.Either<_i6.Failure, List<_i3.Tv>>>);
  @override
  String toString() => super.toString();
}
